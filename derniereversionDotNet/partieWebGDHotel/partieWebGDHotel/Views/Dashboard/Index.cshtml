@model DashboardViewModel
@{
    ViewData["Title"] = "Sélectionner un type de chambre";
}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="min-h-screen bg-gradient-to-br from-blue-100 via-white to-purple-100">
    <!-- Header -->
    <div class="backdrop-blur-sm bg-white/30 p-6 fixed w-full top-0 z-50">
        <nav class="container mx-auto flex justify-between items-center">
            <div class="text-2xl font-serif text-indigo-800" action="@Url.Action("Index", "Dashboard")">Hôtel Luxe</div>
            @if (Model?.User != null)
        {
            <div class="relative group">
                <button class="flex items-center gap-2 px-4 py-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                    </svg>
                    <span></span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                </button>

                <!-- Menu déroulant -->
                <div class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50">
                    <div class="p-4 border-b border-gray-100">
                        <p class="text-sm font-medium text-gray-900">@(Model.User.Nom ?? "Utilisateur")</p>
                        <p class="text-sm text-gray-500 truncate">@(Model.User.Email ?? "")</p>
                    </div>
                    <div class="p-2">
                        <a href="@Url.Action("Profile", "Client")"
                           class="block px-4 py-2 text-sm text-gray-700 hover:bg-indigo-50 rounded-lg transition-colors">
                            Mon Profil
                        </a>
                        <a href="@Url.Action("MesReservations", "Dashboard")"
                           class="block px-4 py-2 text-sm text-gray-700 hover:bg-indigo-50 rounded-lg transition-colors">
                            Mes Réservations
                        </a>
                        <hr class="my-2 border-gray-100">
                        <a href="@Url.Action("Logout", "Client")"
                           class="block px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors">
                            Se déconnecter
                        </a>
                    </div>
                </div>
            </div>
        }
        </nav>
    </div>

    <main class="container mx-auto px-4 pt-24 pb-16">
        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-6 flex justify-between items-center">
            <span>@Model.SuccessMessage</span>
            <form action="@Url.Action("CancelReservation", "Dashboard")" method="post">
                <input type="hidden" name="reservationId" value="@Model.ReservationId" />
                <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition-colors">
                    Annuler la réservation
                </button>
            </form>
        </div>
        }

        <!-- Filtre -->
        <div class="bg-white/40 backdrop-blur-md rounded-xl shadow-lg p-6 mb-8">
            <h2 class="text-2xl font-bold text-gray-800 mb-4">Sélectionner un type de chambre</h2>
            <form method="get" action="@Url.Action("Index", "Dashboard")" class="flex gap-4">
                <select id="typeChambre" name="typeChambre"
                        class="flex-1 px-4 py-2 rounded-lg border border-gray-300 bg-white/50 focus:outline-none focus:ring-2 focus:ring-indigo-500">
                    <option value="">-- Sélectionner --</option>
                    <option value="Double">Double</option>
                    <option value="Deluxe">Deluxe</option>
                    <option value="Suite">Suite</option>
                    <option value="Single">Single</option>
                </select>
                <button type="submit"
                        class="px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:shadow-md transition-all">
                    Filtrer
                </button>
            </form>
        </div>

        <!-- Ajoutez un modal caché dans le HTML -->
        <!-- Modification du modal -->
        <div id="reservationModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 z-50 flex justify-center items-center hidden">
            <!-- Overlay pour fermer le modal en cliquant à l'extérieur -->
            <div class="absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm" onclick="closeModal()"></div>

            <!-- Contenu du modal -->
            <div class="relative bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-100 z-50">
                <!-- En-tête du modal -->
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-800">
                        Réserver la chambre <span id="modalNumChambre"></span>
                    </h2>
                    <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-600 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                <!-- Formulaire de réservation -->
                <form method="post" action="@Url.Action("Reserve", "Dashboard")" class="space-y-6">
                    <input type="hidden" id="numChambreHidden" name="numChambre" />

                    <!-- Date de début -->
                    <div>
                        <label for="DateDebut" class="block text-sm font-medium text-gray-700 mb-2">
                            Date de début
                        </label>
                        <div class="relative">
                            <input type="date" id="DateDebut" name="dateDebut" required
                                   class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all" />
                        </div>
                    </div>

                    <!-- Date de fin -->
                    <div>
                        <label for="DateFin" class="block text-sm font-medium text-gray-700 mb-2">
                            Date de fin
                        </label>
                        <div class="relative">
                            <input type="date" id="DateFin" name="dateFin" required
                                   class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all" />
                        </div>
                    </div>

                    <!-- Bouton de confirmation -->
                    <button action="@Url.Action(".", "Dashboard")" type="submit" class="w-full bg-indigo-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transform transition-all duration-200 hover:scale-[1.02]">
                        Confirmer la réservation
                    </button>
                </form>
            </div>
        </div>

        <!-- Liste des chambres -->
        <h3 class="text-2xl font-bold text-gray-800 mb-4">Chambres disponibles</h3>
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            @foreach (var chambre in Model.Chambres)
            {
            <div class="room-card hover-card glass-effect rounded-lg overflow-hidden">
                @if (chambre.Image != null)
                    {
                <div class="relative h-40 overflow-hidden">
                    <img src="data:image;base64,@Convert.ToBase64String(chambre.Image)"
                         class="w-full h-full object-cover transform hover:scale-110 transition-transform duration-500"
                         alt="Image de la chambre" />
                    <div class="absolute top-2 right-2">
                        @if (chambre.Statut == "Réservée")
                                {
                        <span class="px-2 py-1 text-xs bg-red-100 text-red-700 rounded-full font-medium">@chambre.Statut</span>
                                }
                                else
                                {
                        <span class="px-2 py-1 text-xs bg-green-100 text-green-700 rounded-full font-medium">@chambre.Statut</span>
                                }
                    </div>
                </div>
                    }
                    else
                    {
                <div class="relative h-40 bg-gray-100 flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                    </svg>
                </div>
                    }
                <div class="p-4">
                    <div class="flex justify-between items-start mb-2">
                        <h4 class="text-lg font-semibold text-gray-800">Ch. @chambre.NumChambre</h4>
                        <span class="text-lg font-bold text-indigo-600">@chambre.PrixParNuit€</span>
                    </div>
                    <div class="space-y-1 text-sm mb-3">
                        <p class="text-gray-500 line-clamp-2">@chambre.Description</p>
                        <p class="flex items-center gap-1 text-gray-600">
                            <span class="inline-block px-2 py-0.5 bg-indigo-100 text-indigo-700 rounded text-xs">
                                @chambre.TypeChambre
                            </span>
                            <span class="flex items-center gap-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                                @chambre.Capacite
                            </span>
                        </p>
                    </div>

                    @if (chambre.Statut == "Libre")
                        {
                    <button onclick="openModal(@chambre.NumChambre)"
                            class="group w-full px-3 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-sm font-semibold rounded-lg transition-all duration-300 hover:shadow-md">
                        <span class="flex items-center justify-center gap-1">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                            Réserver
                        </span>
                    </button>
                        }
                        else
                        {
                    <button disabled
                            class="w-full px-3 py-2 bg-gray-400 text-white text-sm font-semibold rounded-lg cursor-not-allowed opacity-75">
                        <span class="flex items-center justify-center gap-1">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                            </svg>
                            Réservée
                        </span>
                    </button>
                        }
                </div>
            </div>
            }
        </div>

        <script>
            function openModal(numChambre) {
                const modal = document.getElementById('reservationModal');
                document.getElementById('modalNumChambre').innerText = numChambre;
                document.getElementById('numChambreHidden').value = numChambre;

                // Afficher le modal avec animation
                modal.classList.remove('hidden');
                setTimeout(() => {
                    modal.querySelector('.scale-100').classList.remove('opacity-0', 'scale-95');
                }, 10);

                // Empêcher le défilement du body
                document.body.style.overflow = 'hidden';
            }

            function closeModal() {
                const modal = document.getElementById('reservationModal');

                // Ajouter l'animation de fermeture
                modal.querySelector('.scale-100').classList.add('opacity-0', 'scale-95');

                // Attendre la fin de l'animation avant de cacher le modal
                setTimeout(() => {
                    modal.classList.add('hidden');
                    document.body.style.overflow = 'auto';
                }, 300);
            }

            // Fermer le modal avec la touche Echap
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    closeModal();
                }
            });
        </script>
    </main>
</body>
</html>